{"version":3,"sources":["pages.js","pages/components/CustomGeneralEvent.tsx","pages/components/CustomAgendaEvent.tsx","pages/components/MyCalendar.tsx","pages/components/FrequentEvent.tsx","pages/events.tsx","pages/components/member.js","pages/board.js","footer.js","App.js","serviceWorker.js","index.js"],"names":["Index","About","Contact","CustomGeneralEvent","props","event","name","description","location","CustomAgendaEvent","link","style","color","href","id","target","localizer","momentLocalizer","moment","MyCalendar","culture","events","defaultDate","Date","components","agenda","onSelectEvent","selectedEvent","window","open","eventPropGetter","backgroundColor","borderRadius","opacity","border","display","FrequentEvent","quarter","Events","useState","setEvents","useEffect","onGetEventsFromFacebook","fetch","method","headers","Headers","Authorization","then","responce","json","data","i","length","formatEvent","height","className","frequent_events","map","e","end","end_time","place","start","start_time","allday","Member","image","backgroundImage","title","class","email","Board","d","key","Footer","split","AppRouter","basename","to","src","process","alt","path","exact","component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.39de5f4e.chunk.js","sourcesContent":["import React from \"react\";\n\nexport function Index() {\n    return <h2>Home</h2>;\n}\n\nexport function About() {\n    return <h2>Om</h2>;\n}\n\nexport function Contact() {\n    return <h2>Kontakt os</h2>\n}\n","import React from \"react\";\nimport { EventProps } from \"react-big-calendar\";\nimport { MyEvent } from \"./interfaces\";\n\nexport const CustomGeneralEvent: React.FC<EventProps<MyEvent>> = props => {\n\treturn (\n\t\t<div>\n\t\t\t<em>{props.event.name}</em>\n\t\t\t<p>{props.event.description}</p>\n\t\t\t<p>Placering: {props.event.location}</p>\n\t\t</div>\n\t);\n};\n","import React, { Component, FunctionComponent } from \"react\";\nimport { EventProps } from \"react-big-calendar\";\nimport { MyEvent } from \"./interfaces\";\n\nexport const CustomAgendaEvent: React.FC<EventProps<MyEvent>> = props => {\n\tconst name = props.event ? props.event.name : \"no name\";\n\tconst description = props.event\n\t\t? props.event.description\n\t\t: \"no description\";\n\tconst location = props.event ? props.event.location : \"no location\";\n\tconst link = props.event ? (\n\t\t<a\n\t\t\tstyle={{ color: \"#81c341\" }}\n\t\t\thref={\"https://facebook.com/events/\" + props.event.id}\n\t\t\ttarget={\"_blank\"}\n\t\t>\n\t\t\tFacebook event\n\t\t</a>\n\t) : (\n\t\t<p>no event</p>\n\t);\n\treturn (\n\t\t<div>\n\t\t\t<em>{name}</em>\n\t\t\t<p>{description}</p>\n\t\t\t<p>Placering: {location}</p>\n\t\t\t{link}\n\t\t</div>\n\t);\n};\n","import { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport moment from \"moment\";\nimport React from \"react\";\nimport { CustomGeneralEvent } from \"./CustomGeneralEvent\";\nimport { CustomAgendaEvent } from \"./CustomAgendaEvent\";\n\nexport interface MyCalenderProps {\n\tevents: any[];\n}\n\nconst localizer = momentLocalizer(moment);\n\nexport const MyCalendar: React.FC<MyCalenderProps> = props => {\n\tconst redirectToEvent = (id: string) => {\n\t\twindow.open(\"https://facebook.com/events/\" + id, \"_blank\");\n\t};\n\n\tfunction eventStyleGetter() {\n\t\tconst backgroundColor = \"#\" + 424242;\n\t\tconst style = {\n\t\t\tbackgroundColor: backgroundColor,\n\t\t\tborderRadius: \"5px\",\n\t\t\topacity: 0.8,\n\t\t\tcolor: \"white\",\n\t\t\tborder: \"0px\",\n\t\t\tdisplay: \"block\"\n\t\t};\n\t\treturn {\n\t\t\tstyle: style\n\t\t};\n\t}\n\n\treturn (\n\t\t<Calendar\n\t\t\tculture={\"en-GB\"}\n\t\t\tevents={props.events}\n\t\t\tlocalizer={localizer}\n\t\t\tdefaultDate={new Date()}\n\t\t\t// @ts-ignore\n\t\t\tcomponents={{\n\t\t\t\tevent: CustomGeneralEvent,\n\t\t\t\tagenda: {\n\t\t\t\t\tevent: CustomAgendaEvent\n\t\t\t\t}\n\t\t\t}}\n\t\t\tonSelectEvent={selectedEvent => redirectToEvent(selectedEvent.id)}\n\t\t\teventPropGetter={() => eventStyleGetter()}\n\t\t/>\n\t);\n};\n","import React from \"react\";\ninterface FrequentEventProp {\n\tname: string;\n\tdescription: string;\n\tquarter: number;\n}\n\nexport const FrequentEvent: React.FC<FrequentEventProp> = props => {\n\treturn (\n\t\t<div>\n\t\t\t<h3>{props.name}</h3>\n\t\t\t{props.quarter ? <h5>Kvartal: Q{props.quarter}</h5> : \"\"}\n\t\t\t<p>{props.description}</p>\n\t\t</div>\n\t);\n};\n","import React, { useEffect, useState } from \"react\";\nimport { MyCalendar } from \"./components/MyCalendar\";\nimport { MyEvent, FbEvent } from \"./components/interfaces\";\nimport { FrequentEvent } from \"./components/FrequentEvent\";\nimport frequent_events from \"../frequent_events.json\";\n\nexport function Events() {\n\tconst [events, setEvents] = useState<MyEvent[]>([]);\n\tuseEffect(() => onGetEventsFromFacebook(), []);\n\n\t//TODO fix token using graph.facebook api\n\tconst onGetEventsFromFacebook = () => {\n\t\tfetch(\"https://graph.facebook.com/DSAUdk/events\", {\n\t\t\tmethod: \"get\",\n\t\t\theaders: new Headers({\n\t\t\t\tAuthorization:\n\t\t\t\t\t\"Bearer EAAeEg2Lpd8EBAOhJ3S7INLOsWzyrZAWJjtohIwO71qrOr75TGj00Rf6C7y6TEv7ZCYDg6ADqzOzZALhRtleZBDOAqZAihZAbPqP3M6zm8rQKtQxyztLFcJyHHR7JuQAMKOphwfm5CHAcQahVfhZCLI2ZC4ghG8FZBmZCbl4oEqZADgj8AZDZD\"\n\t\t\t})\n\t\t})\n\t\t\t.then(responce => responce.json())\n\t\t\t.then(json => {\n\t\t\t\tconst data = json.data;\n\t\t\t\tfor (let i = 0; i < data.length; i++) {\n\t\t\t\t\tdata[i] = formatEvent(data[i]);\n\t\t\t\t}\n\t\t\t\tsetEvents(data);\n\t\t\t});\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<h2>Events</h2>\n\t\t\t<div style={{ height: 700 }}>\n\t\t\t\t<MyCalendar events={events} />\n\t\t\t</div>\n\t\t\t<h2>Ã…rlige events</h2>\n\t\t\t<div className=\"events__grid\">\n\t\t\t\t{frequent_events.map(e => (\n\t\t\t\t\t<FrequentEvent\n\t\t\t\t\t\tname={e.name}\n\t\t\t\t\t\tdescription={e.description}\n\t\t\t\t\t\tquarter={e.quarter}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nfunction formatEvent(json: FbEvent): MyEvent {\n\treturn {\n\t\tdescription: json.description,\n\t\tend: new Date(json.end_time),\n\t\tid: json.id,\n\t\tlocation: json.place.name,\n\t\tname: json.name,\n\t\tstart: new Date(json.start_time),\n\t\tallday: false\n\t};\n}\n","import React from \"react\"\n\nexport default function Member(props) {\n    return (<div className=\"member\">\n        {props.image ? <div className=\"member__image\"\n                            style={{backgroundImage: \"url(\" + process.env.PUBLIC_URL + \"/images/\" + props.image + \")\"}}/> : \"\"}\n        {props.name ? <p className=\"member__name\">{props.name}</p> : \"\"}\n        {props.title ? <p className=\"member__title\">{props.title}</p> : \"\"}\n        {props.class ? <p className=\"member__class\">Ã…rgang {props.class}</p> : \"\"}\n        {props.email ? <a className=\"member__email\" href={\"mailto:\" + props.email}>{props.email}</a> : \"\"}\n    </div>)\n}","import React from \"react\";\nimport data from \"../data.json\";\nimport Member from \"./components/member\"\n\nexport default function Board() {\n    return (\n        <div className=\"board\">\n            <h1>Bestyrelsen</h1>\n            <div className=\"board__grid\">\n                {data.map(d => <Member key={d.name} name={d.name} image={d.image} title={d.title} email={d.email} class={d.class}/>)}\n            </div>\n        </div>\n    );\n\n}","import React from \"react\";\n\nexport default function Footer() {\n    return <div className=\"footer\">Â© Datalogisk Studenterforening Aarhus Universitet - {Date().split(\" \")[3]}</div>\n}","import React from \"react\";\nimport {HashRouter, Route, Link} from \"react-router-dom\";\nimport \"./App.css\";\nimport {Index, About, Contact} from \"./pages\";\nimport {Events} from \"./pages/events\";\nimport Board from \"./pages/board\";\nimport Footer from \"./footer\";\n\nfunction AppRouter() {\n    return (\n        <HashRouter basename=\"/\">\n            <nav className=\"navigation\">\n                <div className=\"navigation__content\">\n                    <Link to=\"/\">\n                        <img\n                            className=\"navigation__logo\"\n                            src={process.env.PUBLIC_URL + \"/DSAU_logo.png\"} // process.env.PUBLIC_URL links to public folder\n                            alt=\"DSAU Logo\"\n                        />\n                    </Link>\n                    <ul className=\"navigation__list\">\n                        <li>\n                            <Link to=\"/\">Hjem</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/om/\">Om</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/kontakt/\">Kontakt</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/bestyrelse/\">Bestyrelse</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/events/\">Events</Link>\n                        </li>\n                    </ul>\n                </div>\n            </nav>\n            <div className=\"content\">\n                <Route path=\"/\" exact component={Index}/>\n                <Route path=\"/om/\" component={About}/>\n                <Route path=\"/kontakt/\" component={Contact}/>\n                <Route path=\"/bestyrelse/\" component={Board}/>\n                <Route path=\"/events/\" component={Events}/>\n            </div>\n            <Footer/>\n        </HashRouter>\n    );\n}\n\nexport default AppRouter;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}